name: Compile CBA-Midi
on:
  release:
    types: [created]
  push:

jobs:

  make-dist:
    name: Create a dist tarball
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: meson dist
        run: nix develop --impure --command bash -c "meson setup build; meson dist -C build --no-test"
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: build/meson-dist/cba-midi-0.1.0.tar.xz
      

  build-flatpak:
    name: build-flatpak
    runs-on: ubuntu-latest

    needs: make-dist

    steps:
      - name: install flatpak
        run: |
          sudo apt-get install flatpak flatpak-builder
      - name: setup flathub
        run: |
          flatpak remote-add --user --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          # flatpak install --assumeyes --user flathub org.gnome.Platform//44 org.gnome.Sdk//44 org.freedesktop.Sdk.Extension.rust-stable//22.08
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - name: unpack dist tarball
        run: |
          tar xvf cba-midi-0.1.0.tar.xz
      - name: build flatpak
        run: |
          flatpak-builder --user --install-deps-from=flathub --repo=repo build cba-midi-0.1.0/build-aux/eu.muehml.cba-midi.json
      - name: bundle flatpak
        run: |
          flatpak build-bundle ./repo cba-midi.flatpak eu.muehml.cba-midi --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo

      - uses: actions/upload-artifact@v3
        with:
          name: flatpak
          path: cba-midi.flatpak
      

  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          sudo dnf update -y
          sudo dnf install -y gcc cargo meson ninja-build blueprint-compiler pkg-config alsa-lib-devel jack-audio-connection-kit-devel libadwaita-devel
      - run: meson setup build -Drelocatable=true --strip --buildtype=release --prefix $PWD/install
      - run: meson install -C build
      - uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: install/
  build-nix:
    name: build-nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: nix build -L
  
  build-windows:
    name: build-windows
    runs-on: windows-latest
    needs: make-dist
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          release: false
          update: true
          msystem: ucrt64
          pacboy: >-
            base-devel
            zip
            meson:p
            ninja:p
            pkg-config:p
            cc:p
            blueprint-compiler:p
            rust:p
            libadwaita:p

      - uses: actions/download-artifact@v3
        with:
          name: dist

      - name: get PKGBUILD
        run: |
          tar -f cba-midi-0.1.0.tar.xz -x cba-midi-0.1.0/build-aux/PKGBUILD
          mv cba-midi-0.1.0/build-aux/PKGBUILD PKGBUILD
          rm -r cba-midi-0.1.0
      - name: Build msys2 package
        run: |
          makepkg-mingw --cleanbuild --force --noconfirm --install

      - name: Upload msys2 package
        uses: actions/upload-artifact@v3
        with:
          name: msys2-package
          path: mingw-w64-ucrt-x86_64-cba-midi-0.1.0-1-any.pkg.tar.zst

      - name: create zip
        run: |
          zipfile=$PWD/cba-midi-0.1.0-win64.zip
          pushd /ucrt64
          pixbuf=lib/gdk-pixbuf-2.0/2.10.0
          svgloader="${pixbuf}/loaders/libpixbufloader-svg.dll"
          requireddlls="$(cat <(ldd bin/cba-midi.exe) <(ldd ${svgloader}) | grep ucrt64 | awk '{ print "bin/" $1}' | sort | uniq)"
          zip $zipfile -r launcher.exe bin/cba-midi.exe share/cba-midi ${requireddlls} ${svgloader} ${pixbuf}/loaders.cache
          popd
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: cba-midi-0.1.0-win64.zip
      
