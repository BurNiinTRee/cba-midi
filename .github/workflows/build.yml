name: Compile CBA-Midi
on:
  release:
    types: [created]
  push:

jobs:

  make-dist:
    name: Create a dist tarball
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: meson dist
        run: nix develop --impure --command bash -c "meson setup build; meson dist -C build --no-test"
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: build/meson-dist/cba-midi-0.1.0.tar.xz
      

  build-flatpak:
    name: build-flatpak
    runs-on: ubuntu-latest

    needs: make-dist

    steps:
      - name: install flatpak
        run: |
          sudo apt-get install flatpak flatpak-builder
      - name: setup flathub
        run: |
          flatpak remote-add --user --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          # flatpak install --assumeyes --user flathub org.gnome.Platform//44 org.gnome.Sdk//44 org.freedesktop.Sdk.Extension.rust-stable//22.08
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - name: unpack dist tarball
        run: |
          tar xvf cba-midi-0.1.0.tar.xz
      - name: build flatpak
        run: |
          flatpak-builder --user --install-deps-from=flathub --repo=repo build cba-midi-0.1.0/build-aux/eu.muehml.cba-midi.json
      - name: bundle flatpak
        run: |
          flatpak build-bundle ./repo cba-midi.flatpak eu.muehml.cba-midi --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo

      - uses: actions/upload-artifact@v3
        with:
          name: flatpak
          path: cba-midi.flatpak
      

  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          sudo dnf update -y
          sudo dnf install -y gcc cargo meson ninja-build blueprint-compiler pkg-config alsa-lib-devel jack-audio-connection-kit-devel libadwaita-devel
      - run: meson setup build --prefix $PWD/install
      - run: meson install -C build
      - uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: install/
  build-nix:
    name: build-nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: nix build -L
  
  build-windows:
    name: build-windows
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          release: false
          update: true
          msystem: ucrt64
          pacboy: >-
            python:p
            meson:p
            ninja:p
            pkg-config:p
            rust:p
            blueprint-compiler:p
            libadwaita:p
            gtk4:p

      - uses: actions/checkout@v3

      - name: Build CBA-midi
        run: |
          meson setup builddir --prefix=/ --strip --buildtype=release
          meson compile -C builddir
          meson install -C builddir --destdir=release

      - name: Create Artifact
        run: |
          install -Dt release  /ucrt64/bin/{libiconv-2,libbz2-1,libcairo-2,libcairo-gobject-2,libcairo-script-interpreter-2,libepoxy-0,libexpat-1,libffi-8,libfontconfig-1,libfreetype-6,libfribidi-0,libgcc_s_seh-1,libgdk_pixbuf-2.0-0,libgio-2.0-0,libglib-2.0-0,libgmodule-2.0-0,libgobject-2.0-0,libgraphene-1.0-0,libgtk-4-1,libharfbuzz-0,libintl-8,libjpeg-8,libpango-1.0-0,libpangocairo-1.0-0,libpangoft2-1.0-0,libpangowin32-1.0-0,libpcre2-8-0,libpixman-1-0,libpng16-16,libtiff-6,libwinpthread-1,zlib1,libstdc++-6,libthai-0,libbrotlidec,libbrotlicommon,libgraphite2,libdatrie-1,liblzo2-2,libdeflate,libjbig-0,libLerc,liblzma-5,libwebp-7,libzstd,libsharpyuv-0}.dll
          install -Dt release ./builddir/release/msys64/{bin/cba-midi.exe,share/cba-midi/{map.txt,cba-midi-resources.gresource}}
          

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: release/
      
