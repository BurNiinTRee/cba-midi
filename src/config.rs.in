pub const APP_ID: &str = @APP_ID@;
const PKGDATADIR: &str = @PKGDATADIR@;
const PORTABLE: bool = @PORTABLE@;


use std::{
    borrow::Cow,
    path::{Path, PathBuf},
};

pub fn pkg_data_dir() -> Cow<'static, Path> {
    if PORTABLE {
        let mut path = std::env::current_exe().expect("Couldn't locate cba-midi.exe");
        path.pop();
        path.pop();
        path.push("share");
        path.push("cba-midi");
        path.into()
    } else {
        (Path::new(PKGDATADIR)).into()
    }
}

pub fn resource_file() -> PathBuf {
    let mut path: PathBuf = pkg_data_dir().into_owned();
    path.push("cba-midi-resources.gresource");
    path
}
